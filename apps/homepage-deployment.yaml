---
apiVersion: v1
kind: Namespace
metadata:
  name: homepage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: homepage
data:
  kubernetes.yaml: |
    mode: cluster
  proxmox.yaml: |
    url: https://192.168.178.75:8006
    username: homepage@pve!homepage-token
    password: {{HOMEPAGE_VAR_PROXMOX_PASSWORD}}
  bookmarks.yaml: |
    - Developer:
      - Github:
        - abbr: GH
          href: https://github.com/Piotr1215
      - Homelab Repo:
        - abbr: Repo
          href: https://github.com/Piotr1215/homelab
    - Documentation:
      - K8s Docs:
        - abbr: K8s
          href: https://kubernetes.io/docs/
      - ArgoCD Docs:
        - abbr: Argo
          href: https://argo-cd.readthedocs.io/
  services.yaml: |
    - Management:
      - ArgoCD:
          description: GitOps Continuous Delivery
          href: http://192.168.178.93
          icon: git.svg
          showStats: true
          widget:
            type: argocd
            url: http://192.168.178.93
            key: {{HOMEPAGE_VAR_ARGOCD_TOKEN}}
      - Portainer:
          description: Container Management Platform
          href: https://192.168.178.96:9443
          icon: portainer.svg
          showStats: true
          widget:
            type: portainer
            url: https://192.168.178.96:9443
            env: 1
            kubernetes: true
            key: {{HOMEPAGE_VAR_PORTAINER_KEY}}
    - Observability:
      - Prometheus:
          description: Metrics & Monitoring
          href: http://192.168.178.99:9090
          icon: prometheus.svg
          widget:
            type: prometheus
            url: http://kube-prometheus-stack-prometheus.prometheus.svc.cluster.local:9090
      - Grafana:
          description: Visualization & Dashboards
          href: http://192.168.178.98
          icon: grafana.svg
          widget:
            type: grafana
            url: http://kube-prometheus-stack-grafana.prometheus.svc.cluster.local:80
            username: admin
            password: {{HOMEPAGE_VAR_GRAFANA_PASSWORD}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      serviceAccountName: homepage
      containers:
      - name: homepage
        image: ghcr.io/gethomepage/homepage:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: HOMEPAGE_VAR_PROXMOX_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homepage-secrets
              key: proxmox-password
        - name: HOMEPAGE_VAR_ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              name: homepage-secrets
              key: argocd-token
        - name: HOMEPAGE_VAR_PORTAINER_KEY
          valueFrom:
            secretKeyRef:
              name: homepage-secrets
              key: portainer-key
        - name: HOMEPAGE_VAR_GRAFANA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: homepage-secrets
              key: grafana-password
        volumeMounts:
        - name: config
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: config
        configMap:
          name: homepage
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: homepage
spec:
  selector:
    app: homepage
  ports:
  - name: http
    port: 80
    targetPort: 3000
  type: LoadBalancer
  loadBalancerIP: 192.168.178.94
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
  verbs: ["get", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
- kind: ServiceAccount
  name: homepage
  namespace: homepage