---
apiVersion: v1
kind: Namespace
metadata:
  name: shell-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shell-operator
  namespace: shell-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shell-operator
rules:
  - apiGroups: [""]
    resources: ["pods", "events", "configmaps", "secrets", "namespaces", "services", "endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "statefulsets", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shell-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: shell-operator
subjects:
  - kind: ServiceAccount
    name: shell-operator
    namespace: shell-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shell-operator-hooks
  namespace: shell-operator
data:
  # Example hook that watches for pod creation
  # You can add your custom hooks here
  01-pod-monitor.sh: |
    #!/usr/bin/env bash
    
    if [[ $1 == "--config" ]]; then
      cat <<EOF
    configVersion: v1
    kubernetes:
    - apiVersion: v1
      kind: Pod
      executeHookOnEvent: ["Added", "Deleted"]
    EOF
    else
      # Get binding context
      type=$(jq -r '.[0].type' $BINDING_CONTEXT_PATH)
      
      if [[ $type == "Event" ]]; then
        watchEvent=$(jq -r '.[0].watchEvent' $BINDING_CONTEXT_PATH)
        podName=$(jq -r '.[0].object.metadata.name' $BINDING_CONTEXT_PATH)
        podNamespace=$(jq -r '.[0].object.metadata.namespace' $BINDING_CONTEXT_PATH)
        
        echo "Pod event detected: $watchEvent for pod $podName in namespace $podNamespace"
      fi
    fi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shell-operator
  namespace: shell-operator
  labels:
    app: shell-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shell-operator
  template:
    metadata:
      labels:
        app: shell-operator
    spec:
      serviceAccountName: shell-operator
      containers:
      - name: shell-operator
        image: ghcr.io/flant/shell-operator:v1.9.1
        imagePullPolicy: IfNotPresent
        env:
        - name: SHELL_OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_TYPE
          value: "json"
        volumeMounts:
        - name: hooks
          mountPath: /hooks
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9115
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 9115
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - containerPort: 9115
          name: metrics
          protocol: TCP
      volumes:
      - name: hooks
        configMap:
          name: shell-operator-hooks
          defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  name: shell-operator
  namespace: shell-operator
  labels:
    app: shell-operator
spec:
  type: ClusterIP
  ports:
  - port: 9115
    targetPort: 9115
    protocol: TCP
    name: metrics
  selector:
    app: shell-operator
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: shell-operator
  namespace: shell-operator
  labels:
    app: shell-operator
spec:
  selector:
    matchLabels:
      app: shell-operator
  endpoints:
  - port: metrics
    interval: 30s
    scrapeTimeout: 10s